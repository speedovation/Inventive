extends ./layout.jade

block title
  title Typography

block leftcontent
  h3 &nbsp; 
  - var items = [ "Asymmetrical", "Symmetrical" ,"Column","Pull and Push","Universal responsive class","Collapse row" ]
  +top_left(vals)
   
block content
    h2.divide-section Mobile First Responsive Grid System
    
    
    .row
       
      .col-6.col-push-6.col-desktop-4.col-desktop-push-0
         h3 Fluid Layout
         p
           | Liquid or 
           strong percentage based layout
           |  has quickly become the standard way of creating responsive web sites.
       
      .col-6.col-pull-6.col-desktop-4.col-desktop-pull-0
         h3 Mobile first
         p
           |  Overwriting or undoing styles for mobile devices feels unnatural so Fluidable puts 
           strong mobile first
           |   .
      
       .col-6.col-desktop-4
         .col-group
           .col-12
             h3 Responsive
             p
               | Fluidable comes with four 
               strong configurable break-points
               |  . Adjust them or just ignore them.
       
      .col-6.col-desktop-4
         h3 Variable Columns
         p
           | Use 
           strong any number of columns
           |  you like. It does not force you to use a predefined number.
       
      .col-6.col-desktop-4
         h3 Nestable
         p
           | Split and 
           strong include columns inside other columns
           |   using as many levels as you need.
       
      article.col-6.col-desktop-4
         h3 Fixed Gutters
         p
           | An important requirement for grid was to have  
           strong fixed gutters set in rems
           |  that conform better with typographic rules.

    
    h3 Default Media Queries
    p 
      | When using Responsive Grids, you can control how the grid behaves at specific breakpoints by adding class names. 
      | Default responsive grids comes with the following class names and media query breakpoints.
    
    .table-responsive
      table.table.bordered.zebra.rounded
        thead
          tr
            th Key
            th CSS Media Query
            th Applies
            th Classname
        tbody
          
          tr
            td
              b
                code mobile
            td
              code @media screen and (min-width: 480px)
            td
              | &#8805;
              b 480px
            td
              code .mobile-
                
          tr
            td
              b
                code tablet
            td
              code @media screen and (min-width: 768px)
            td
              | &#8805;
              b 768px
            td
              code .tablet-
                
          tr
            td.highlight
              b
                code desktop
            td
              code @media screen and (min-width: 992px)
            td
              | &#8805;
              b 992px
            td
              code .desktop-
                
                
          tr
            td
              b
                code large
            td
              code @media screen and (min-width: 1200px)
            td
              | &#8805;
              b 1200px
            td
              code .large-
                
   

    
        
    
    mixin span_text(l,d,t,m)
      span.span_l large #{d}
      span.span_d desktop #{d}
      span.span_t tablet #{t}
      span.span_m mobile #{m}
    
    
    h2#Asymmetrical Asymmetrical
    .preview-box
        .row
          .large-4.desktop-3.tablet-6.mobile-8
            +span_text('4','3','6','8')
    
          .large-8.desktop-9.tablet-6.mobile-4
            +span_text('8','9','6','4')
    
        .row
            .large-4.desktop-3.tablet-12.mobile-12
                +span_text('4','3','12','12')
    
            .large-8.desktop-9.tablet-12.mobile-12
                +span_text('8','9','12','12')
    
    hr
    
    h2#Symmetrical Symmetrical
    .preview-box
        .row
          .large-3.desktop-3.tablet-3.mobile-3
            +span_text('3','3','3','3')
    
          .large-3.desktop-3.tablet-3.mobile-3
            +span_text('3','3','3','3')
    
          .large-3.desktop-3.tablet-3.mobile-3
            +span_text('3','3','3','3')
    
          .large-3.desktop-3.tablet-3.mobile-3
            +span_text('3','3','3','3')
    
    hr
    
    h2#Column Column
    .preview-box
        .row
          .large-4.desktop-4.tablet-4.mobile-4
              +span_text('4','4','4','4')
          .large-4.desktop-4.tablet-4.mobile-4
              +span_text('4','4','4','4')
          .large-4.desktop-4.tablet-4.mobile-4
              +span_text('4','4','4','4')
    
    hr
    
    h2#PullandPush Pull and Push - SourceOrdering
    p
      |  You can change the display order of the columns to keep a specific column order 
      |  in the source code. Add one of the 
      code .*-push-*
      |  classes to move the column to the right and add one of the 
      code .*-pull-*
      |  classes to move a column to the left. This allows you for example to flip 
      |  the columns" display order for wider viewports. The classes can also be used to 
      |  offset columns, creating additional space between them.
    p
      |  Source ordering is useful for SEO and responsive design, because in narrow 
      |  viewports the grid will be displayed according to the source order of the markup.
    p
      span NOTE 
      |  This feature only works in combination with one of the 
      code .**-push-* 
      |  where ** can be 
      code mobile, tablet, desktop, large or col
      |  classes.
    
    h3 Example
    .preview-box
      .row.text-center
        .col-3.col-push-5
          +span_text('Push 5','Push 5','Push 5','Push 5')  
        .col-3.col-pull-3
          +span_text('Pull 2','Pull 2','Pull 2','Pull 2')
      
    .preview-box
      .row.text-center
        .col-2.col-push-4
          +span_text('Push 4','Push 4','Push 4','Push 4')  
        .col-2.col-pull-1
          +span_text('Pull 1','Pull 1','Pull 1','Pull 1') 
    
    hr
    
    h2 Offset

    p 
      code .offset-x
      |  and 
      code .offset-dt-x
      |  are set of classes to push a column using its left margin. This is good to 
      |  use instead of creating empty columns. Use 
      strong .offset-0
      |  for no offset.
      
      
    .preview-box
      .row.text-center
        .col-2.col-offset-4
          +span_text('Offset 4','Offset 4','Offset 4','Offset 4')  
        .col-2.col-offset-1
          +span_text('Offset 1','Offset 1','Offset 1','Offset 1')   

    hr

    h2 Fixed aspect ratio
    
    p
      code .col-fixed-hd
      |  , 
      code .col-fixed-landscape
      |  , 
      code .col-fixed-square
      |  , 
      code .col-portrait
      |  Fix the hight of a column to a specific aspect ratio. For this to work, 
      | wrap the content of the column in an element with the class 
      strong .col-content
      |  . This is great for displaying grid views where all the item should be the 
      |  same height.


    hr
    
    h2#Universalresponsiveclass Universal responsive class
    p Just use .col if you want
    
    .preview-box
        .row
            .col-4
                span.span_c Col 4 
            .col-4
                span.span_c Col 4 
            .col-4
                span.span_c Col 4 
    
    hr
    
    h2#Collapserow Collapse row
    p No paddings inside columns . Add <code>.width-per-*</code> where * is width in percentage.
    p Its universal and responsive.
    
    .preview-box
        .row
            .width-per-33
                +span_text('4','4','4','4')
            .width-per-33
                +span_text('4','4','4','4')
            .width-per-33
                +span_text('4','4','4','4')
    
    //      h2 Push
    //
    //      .row
    //        .desktop-4.desktop-push-4.tablet-2.tablet-push-2.mobile-2.mobile-push-1
    //          +span_text('push 4','push 2','push 1')
    //
    //      .row
    //        .desktop-4.desktop-push-2.tablet-2.tablet-push-1.mobile-1
    //          +span_text('push 2','push 1','1')
    //
    //        .desktop-4.tablet-2.mobile-1
    //          +span_text('4','2','1')
    //
    //      .row
    //        .desktop-12.tablet-6.mobile-3
    //          +span_text('12','6','3')
    //
    //
    //      h2 Padded
    //
    //      .row
    //        .desktop-4.tablet-2.mobile-1.padded(style="background:#f6f6f6")
    //          +span_text('4','2','1')
    //
    //        .desktop-8.tablet-4.mobile-2.padded
    //          +span_text('8','4','2')
    //
    //      h2 Contained
    //
    //      .row
    //        .desktop-4.tablet-2.mobile-1.contained(style="background:#f6f6f6")
    //          +span_text('4','2','1')
    //
    //        .desktop-8.tablet-4.mobile-2.contained
    //          +span_text('8','4','2')
    //
    //
    //
    //
    //
